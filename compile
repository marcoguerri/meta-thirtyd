#!/bin/sh

die() {
    echo $1
    exit 1
}


usage() {
    echo "Usage: $0 [OPTIONS]"
    echo
    echo "Options:"
    echo "  --help"
    echo "      Displays this message"
    echo "  --oe-root"
    echo "      Specify Openembedded root"
    echo "  --nfs-root"
    echo "      Root of nfs mount"
    echo
}

OE_ROOT=""
NFS_ROOT=""
ARGS=$(getopt -q -o a \
                 --long oe-root:, --long nfs-root:, \
                 -n "compile" -- "$@");

# Reset command line arguments as ARGS (parsed by getopt)
eval set -- "$ARGS"

[ $? -eq 0 ] || die "Error while parsing command line parameters"

while true; do
    case "$1" in
        --help)
            usage
            exit 0
            ;;
        --oe-root)
            shift
            OE_ROOT=$1
            shift 
            ;;
        --nfs-root)
            shift
            NFS_ROOT=$1
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

[ x"$OE_ROOT" != x"" ] || die "Openembedded path was not specified"
[ -e $OE_ROOT ] || die "Openembedded path does not exist"

cd ${OE_ROOT}/openembedded-core
export BBPATH=${OE_ROOT}/openembedded-core/build
export PATH=${PATH}:${OE_ROOT}/openembedded-core/bitbake/bin

if [ ! -f oe-init-build-env ];
then
    die "Could not find oe-init-build-env\n"
fi
. ./oe-init-build-env
bitbake rpi-basic-image


if [ $? -ne 0 ];
then
    die "Compilation failed"
fi
echo $NFS_ROOT
if [ x"$NFS_ROOT" = x"" ];
then
    die "NFS_ROOT not specified, exiting"
fi


FS_PATH="${OE_ROOT}/openembedded-core/build/tmp-glibc/deploy/images/raspberrypi/rpi-basic-image-raspberrypi.ext3"
# New fs image is now available. Rpi won't take this very well.
sudo mount -o remount $FS_PATH $NFS_ROOT > /dev/null 2>&1

if [ $? -eq 32 ];
then
    # Filesystem was not mounted
    sudo mount $FS_PATH $NFS_ROOT > /dev/null 2>&1
fi

sudo systemctl restart nfs-kernel-server
